package components

import (
	"sep_setting_mgr/internal/components"
	"sep_setting_mgr/internal/domain/models"
	"strconv"
)

func prepareTestEventsForTable(testEvents models.TestEvents) components.TableData {
	var rows []components.Row
	headers := []string{"Name", "Date"}
	for _, testEvent := range testEvents {
		rows = append(rows, testEventToRow(testEvent))
	}
	return components.TableData{ID: "test-events-table", Title: "Test Events", Headers: headers, Rows: rows}
}

templ TestEventsTableComponent(testEvents models.TestEvents, classID int) {
	@AddTestEventForm(classID)
	@components.TableComponent(prepareTestEventsForTable(testEvents))
}

func testEventToRow(testEvent *models.TestEvent) components.Row {
	return components.Row{
		Editable: true,
		Data:     []string{testEvent.TestName, testEvent.TestDate.Format("2006-01-02")},
		ID:       testEvent.ID,
		Buttons: []components.TableButton{
			{
				Text: "Edit",
				Attr: templ.Attributes{
					"hx-get":      "/test-events/" + strconv.Itoa(testEvent.ID) + "/edit",
					"hx-target":   "#details",
					"hx-push-url": "true",
					"hx-swap":     "afterbegin",
				},
			},
			{
				Text: "Delete",
				Attr: templ.Attributes{
					"hx-delete":  "/test-events/" + strconv.Itoa(testEvent.ID),
					"hx-target":  "closest tr",
					"hx-confirm": "Are you sure you want to delete this test event?",
				},
			},
		},
	}
}

templ TestEventRowComponent(testEvent *models.TestEvent) {
	@components.TableRowComponent(testEventToRow(testEvent))
}
