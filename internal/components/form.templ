package components

type Form struct {
	Title          string
	SubTitle       string
	HxAttr         templ.Attributes
	SubmitBtnTitle string
	ShowDialog     bool
	Cancelable     bool
}

templ FormComponent(f Form) {
	<dialog
		class=" rounded-xl p-4"
		if f.ShowDialog {
			open
		}
	>
		<form { f.HxAttr... } hx-disabled-elt="this" id="form" class="min-w-56">
			<div class="flex flex-col items-center">
				<h2 class="text-base font-semibold leading-7 text-gray-900">{ f.Title }</h2>
				<div class="min-w-[30vw]">
					{ children... }
				</div>
				<div class="flex gap-2">
					if f.Cancelable {
						@ButtonComponent(Button{Attr: templ.Attributes{"id": "cancel"}}) {
							Cancel
						}
					}
					@ButtonComponent(Button{Attr: templ.Attributes{"id": "submit"}}) {
						{ f.SubmitBtnTitle }
					}
				</div>
				<div id="confirmation"></div>
				@Indicator("loading")
			</div>
		</form>
	</dialog>
	if !f.ShowDialog {
		<button id={ "open-dialog"}>{ f.Title }</button>
	}
	<script>

	document.querySelector("body").addEventListener("htmx:afterRequest", (e) => {
		const form = document.querySelector("#form");
		console.log("afterRequest event triggered");
		console.log(e.target)

		if (e.target.matches("#form")) {
			var xhr = e.detail.xhr;
			console.log(xhr.status);

			if (form.reportValidity()) {
					console.log("clearing forms, removing required, and closing dialog")
				document.querySelector("form").reset()
				document.querySelector("dialog").close();
			}
		}
	})


	document.querySelector("body").addEventListener("click", (e) => {
		if (e.target.id === "open-dialog") {
			document.querySelector("dialog").showModal();
		}
	})

	document.querySelector("body").addEventListener("click", (e) => {
		const closeButton = document.querySelector("dialog button#cancel");
		if (e.target === closeButton) {
			e.preventDefault();
					document.querySelector("dialog").close();
		}
	})
</script>
}
