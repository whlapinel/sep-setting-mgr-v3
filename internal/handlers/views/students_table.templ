package views

import (
	"github.com/labstack/echo/v4"
	"sep_setting_mgr/internal/domain/models"
	common "sep_setting_mgr/internal/handlers/handlerscommon"
	"sep_setting_mgr/internal/handlers/views/components"
	"strconv"
)

const studentTableID = "students-table"

func prepareStudentsForTable(students []*models.Student, class *models.Class, router *echo.Echo) components.TableData {
	var rows []components.Row
	headers := []string{"Name", "Block"}
	for _, student := range students {
		rows = append(rows, studentToRow(student, class, router))
	}
	return components.TableData{ID: studentTableID,
		Title:       "Students in " + class.Name,
		Description: "A list of all students.",
		AddRow:      true,
		AddRowButton: components.Button{
			Attr: templ.Attributes{
				"hx-get":      router.Reverse(string(common.ShowAddStudentForm), class.ID),
				"hx-target":   "#" + studentTableID,
				"hx-swap":     "afterbegin",
				"hx-push-url": "true",
			},
		},
		Headers: headers,
		Rows:    rows}
}

templ StudentTableComponent(students []*models.Student, class *models.Class, router *echo.Echo) {
	@components.TableComponent(prepareStudentsForTable(students, class, router))
}

func studentToRow(student *models.Student, class *models.Class, router *echo.Echo) components.Row {
	return components.Row{
		TableID:  studentTableID,
		Editable: true,
		Data:     []string{student.FirstName, student.LastName},
		ID:       student.ID,
		Buttons: []components.TableButton{
			{
				Text: "Delete",
				Attr: templ.Attributes{
					"hx-delete":  router.Reverse(string(common.DeleteStudent), class.ID, student.ID),
					"hx-target":  "closest tr",
					"hx-confirm": "Are you sure you want to delete this student?",
				},
			},
			{
				Text: "Edit",
				Attr: templ.Attributes{
					"hx-get":      router.Reverse(string(common.ShowEditStudentForm), class.ID, student.ID),
					"hx-target":   "#" + studentTableID + "-form-cell-" + strconv.Itoa(student.ID),
					"hx-push-url": "true",
				},
			},
		},
	}
}

templ StudentRowComponent(student *models.Student, class *models.Class, router *echo.Echo) {
	@components.TableRowComponent(studentToRow(student, class, router))
}
