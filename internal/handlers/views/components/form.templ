package components

type Form struct {
	ID             string
	Title          string
	SubTitle       string
	HxAttr         templ.Attributes
	SubmitBtnTitle string
	ShowFormPath   string
	ShowDialog     bool
	Cancelable     bool
}

func getDialogID(id string) string {
	return id + "-dialog"
}

func getFormID(id string) string {
	return id
}

func getOpenDialogID(id string) string {
	return "open-" + id + "-dialog"
}

func getCancelButtonID(id string) string {
	return "cancel-" + id
}

func getSubmitButtonID(id string) string {
	return "submit-" + id
}

func getConfirmationID(id string) string {
	return id + "-confirmation"
}

templ FormComponent(f Form) {
	<dialog
		class=" rounded-xl p-4"
		id={ "form-dialog-" + f.ID }
	>
		<script type="text/javascript">
			(() => {
				let script = document.currentScript;
				console.log("script element: " + script);
				console.log("hello from within the IIFE");
				const dialog = script.closest("dialog");
				const id = dialog.getAttribute("id");
				console.log("dialog id: " + id);
				console.log(dialog);
				console.log("hello from after the IIFE");
			})()

		</script>
		<form { f.HxAttr... } hx-disabled-elt="this" id={ f.ID } class="min-w-56">
			<div class="flex flex-col items-center">
				<h2 class="text-base font-semibold leading-7 text-gray-900">{ f.Title }</h2>
				<div class="min-w-[30vw]">
					{ children... }
				</div>
				<div class="flex gap-2">
					if f.Cancelable {
						@ButtonComponent(Button{Attr: templ.Attributes{
							"id": getCancelButtonID(f.ID),
						}}) {
							Cancel
							<script>
								(() => {
									const script = document.currentScript;
									const button = script.closest("button");
									button.addEventListener("click", () => {
										window.history.back();
									});
								})();
							</script>
						}
					}
					@ButtonComponent(Button{Attr: templ.Attributes{"id": getSubmitButtonID(f.ID), "type": "submit"}}) {
						{ f.SubmitBtnTitle }
					}
				</div>
				<div id={ getConfirmationID(f.ID) }></div>
				@Indicator("loading")
			</div>
			<script type="text/javascript">
				(() => {
					const script = document.currentScript;
					document.querySelector("body").addEventListener("htmx:afterRequest", (e) => {
						const form = script.closest("form");
						const formID = form.getAttribute("id");
						console.log("form id: " + formID);
						console.log("afterRequest event triggered");
						console.log("event target: " + e.target)
						var xhr = e.detail.xhr;
						console.log(xhr.status);
						if (xhr.status === 201) {
							const dialog = form.closest("dialog");
							dialog.close();
						}
				})
				})();
			</script>
		</form>
		<script>
			(() => {
				const script = document.currentScript;
				const dialog = script.closest("dialog");
				dialog.showModal();
			})();
		</script>
	</dialog>
}
