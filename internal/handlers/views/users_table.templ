package views

import (
	"github.com/labstack/echo/v4"
	"sep_setting_mgr/internal/domain/models"
	common "sep_setting_mgr/internal/handlers/handlerscommon"
	"sep_setting_mgr/internal/handlers/views/components"
)

var usersTableID = "users-table"

func prepareUsersForTable(users []*models.User, r *echo.Echo) components.TableData {
	var rows []components.Row
	headers := []string{"First", "Last", "Email", "Admin", "Teacher"}
	for _, user := range users {
		rows = append(rows, userToRow(user, r))
	}
	return components.TableData{
		ID:          usersTableID,
		Title:       "Users",
		Description: "A list of all users.",
		Headers:     headers,
		Rows:        rows}
}

func userToRow(user *models.User, r *echo.Echo) components.Row {
	hasRoleFalse := "No"
	hasRoleTrue := "Yes"
	var hasAdmin string
	switch user.Admin {
	case true:
		hasAdmin = hasRoleTrue
	case false:
		hasAdmin = hasRoleFalse
	}
	var hasTeacher string
	switch user.Teacher {
	case true:
		hasTeacher = hasRoleTrue
	case false:
		hasTeacher = hasRoleFalse
	}
	return components.Row{
		TableID:  usersTableID,
		Editable: true,
		Data:     []string{user.FirstName, user.LastName, user.Email, hasAdmin, hasTeacher},
		ID:       user.ID,
		Buttons: []components.TableButton{
			{
				Text: "Edit",
				Attr: templ.Attributes{
					"hx-get":    r.Reverse(string(common.ShowEditUserForm), user.ID),
					"hx-target": "#" + components.GetCellID(usersTableID, user.ID),
				},
			},
			{
				Text: "Delete",
				Attr: templ.Attributes{
					"hx-delete":  r.Reverse(string(common.DeleteUser), user.ID),
					"hx-target":  "closest tr",
					"hx-confirm": "Are you sure you want to delete this user?",
				},
			},
		},
	}
}

templ UsersTableComponent(users []*models.User, r *echo.Echo) {
	@components.TableComponent(prepareUsersForTable(users, r))
}

templ UsersRowComponent(user *models.User, r *echo.Echo) {
	@components.TableRowComponent(userToRow(user, r))
}
