package views

import (
	"github.com/labstack/echo/v4"
	"sep_setting_mgr/internal/domain/models"
	common "sep_setting_mgr/internal/handlers/handlerscommon"
	"sep_setting_mgr/internal/handlers/views/components"
	"strconv"
)

const roomsTableID = "rooms-table"

templ RoomsTableComponent(rooms models.Rooms, router *echo.Echo) {
	@components.TableComponent(prepareRoomsForTable(rooms, router))
}

templ RoomsRowComponent(room *models.Room, router *echo.Echo) {
	@components.TableRowComponent(roomToRow(room, router))
}

func prepareRoomsForTable(rooms models.Rooms, router *echo.Echo) components.TableData {
	var rows []components.Row
	headers := []string{"Name", "Number", "Priority", "Capacity"}
	if len(rooms) == 0 {
		rows = []components.Row{}
	} else {
		for _, room := range rooms {
			if room.ID != -1 {
				rows = append(rows, roomToRow(room, router))
			}
		}
	}
	return components.TableData{ID: roomsTableID, Title: "Rooms",
		Description: "A list of all rooms.",
		AddRow:      true,
		AddRowButton: components.Button{
			Attr: templ.Attributes{
				"hx-get":      router.Reverse(string(common.ShowAddRoomForm)),
				"hx-target":   "#" + roomsTableID,
				"hx-swap":     "afterbegin",
				"hx-push-url": "true",
			},
		},

		Headers: headers, Rows: rows}

}

func roomToRow(room *models.Room, router *echo.Echo) components.Row {
	return components.Row{
		TableID:  roomsTableID,
		Editable: true,
		Data:     []string{room.Name, room.Number, strconv.Itoa(room.Priority), strconv.Itoa(room.MaxCapacity)},
		ID:       room.ID,
		Buttons: []components.TableButton{
			{
				Text: "Promote",
				Attr: templ.Attributes{
					"hx-post":   router.Reverse(common.PromoteRoom.String(), room.ID),
					"hx-target": "#details",
					"disabled":  room.Priority < 2,
				},
			},
			{
				Text: "Edit",
				Attr: templ.Attributes{
					"hx-get":      router.Reverse(string(common.ShowEditRoomForm), room.ID),
					"hx-target":   "#" + components.GetCellID(roomsTableID, room.ID),
					"hx-swap":     "beforebegin",
					"hx-push-url": "true",
				},
			},
			{
				Text: "Delete",
				Attr: templ.Attributes{
					"hx-delete":  router.Reverse(string(common.DeleteRoom), room.ID),
					"hx-target":  "closest tr",
					"hx-confirm": "Are you sure you want to delete this room?",
				},
			},
		},
	}
}
