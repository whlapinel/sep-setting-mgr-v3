package views

import (
	"github.com/labstack/echo/v4"
	"sep_setting_mgr/internal/domain/models"
	common "sep_setting_mgr/internal/handlers/handlerscommon"
	"sep_setting_mgr/internal/handlers/views/components"
	"sep_setting_mgr/internal/handlers/views/layouts"
)

type ApplicationsPageProps struct {
	R                 *echo.Echo
	UserID            int
	AppliedForTeacher bool
	AppliedForAdmin   bool
	HasTeacherRole    bool
	HasAdminRole      bool
}

templ ApplicationsPage(p ApplicationsPageProps) {
	@layouts.PageLayout("Applications", nil) {
		<h2 class="text-lg">Teacher Role</h2>
		if p.HasTeacherRole {
			<p class="text-sm">You are already a teacher.</p>
		} else {
			if p.AppliedForTeacher {
				<p class="text-sm">Your application for the teacher role is pending.</p>
			} else {
				@ApplyButton(p.R, p.UserID, "teacher")
			}
		}
		<h2 class="text-lg">Admin Role</h2>
		if p.HasAdminRole {
			<p class="text-sm">You are already an admin.</p>
		} else {
			if p.AppliedForAdmin {
				<p class="text-sm">Your application for the admin role is pending.</p>
			} else {
				@ApplyButton(p.R, p.UserID, "admin")
			}
		}
	}
}

templ ApplyButton(r *echo.Echo, userID int, role string) {
	@components.ButtonComponent(components.Button{
		Attr: templ.Attributes{
			"hx-post": r.Reverse(common.ApplyForRole.String(), userID, role),
			"hx-swap": "outerHTML",
			"class":   "cursor-pointer",
		},
	}) {
		Apply for the { role } role
	}
}

type AppliedSuccessProps struct {
	Role models.Role
}

templ AppliedSuccess(p AppliedSuccessProps) {
	<h1>Success</h1>
	<p>Your application for { p.Role.Str() } has been submitted.</p>
	<p>You will be notified when your application has been approved.</p>
}

type AppliedFailureProps struct {
	Role   models.Role
	Reason string
}

templ AppliedFailure(p AppliedFailureProps) {
	<h1>Failure</h1>
	<p>Your application for { p.Role.Str() } has failed to submit.</p>
	<p>Reason: { p.Reason }</p>
	<p>Please try again later.</p>
}
